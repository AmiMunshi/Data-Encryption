#Feistel Cipher
PT= input("Enter the plain text :")
PT_Ascii= [ord(x) for x in PT]
PT_Bin= [format(y,'08b') for y in PT_Ascii]
PT_Bin="".join(PT_Bin)
print("Plain Text in Binary: ", PT_Bin)
m=len(R1)
n= int(len(PT_Bin)/2)
L1= PT_Bin[0:n]
R1= PT_Bin[n::]
print("L1= ", L1)
print("R1= ", R1)

# Random bits key generation
def rand_key(n):
  import random
  key1=""
  n=int(n)
  for i in range(n):
    temp= random.randint(0,1)
    temp=str(temp)
    key1=key1+temp
  return(key1)

## Generate Key K1 for the first round
import random
K1= rand_key(m)
print("K1= ", K1)

## Function to implement bit exor
def exor(a,b):
  temp = "" 
  for i in range(n): 
      if (a[i] == b[i]): 
          temp += "0"
      else: 
          temp += "1"
  return temp 
 
#First Round of Feistel encryption
f1= exor(R1,K1)
R2= exor(f1,L1)
L2=R1

## Generate Key K2 for the first round
K2= rand_key(m)
print("K2= ", K2)


#Second round of Feistel encryption
f2= exor(R2,K2)
R3= exor(f2,L2)
L3=R2

#Decryption
L4=L3
R4=R3
# Second Roaund decryption
f3= exor(L4,K2)
L5= exor(R4,f3)
R5=L4
#First Round decryption
f4= exor(L5,K1)
L6= exor(R5,f4)
R6=L5
PT1= L6+R6

import binascii
PT1 = int(PT1, 2)
#print(PT1)
binascii.unhexlify( '%x'% PT1)
#binascii.unhexlify(PT1)
